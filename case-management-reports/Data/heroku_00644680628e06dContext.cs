// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using CaseManagementReports.Models;

namespace CaseManagementReports.Data
{
    public partial class heroku_00644680628e06dContext : DbContext
    {
        public heroku_00644680628e06dContext()
        {
        }

        public heroku_00644680628e06dContext(DbContextOptions<heroku_00644680628e06dContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Communityresourcegroup> Communityresourcegroup { get; set; }
        public virtual DbSet<Hospitalpolicy> Hospitalpolicy { get; set; }
        public virtual DbSet<Policymaker> Policymaker { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("utf8_general_ci")
                .HasCharSet("utf8");

            modelBuilder.Entity<Communityresourcegroup>(entity =>
            {
                entity.HasKey(e => e.GroupId)
                    .HasName("PRIMARY");

                entity.ToTable("communityresourcegroup");

                entity.Property(e => e.GroupId)
                    .HasColumnType("int(11)")
                    .HasColumnName("groupId");

                entity.Property(e => e.Address)
                    .HasMaxLength(500)
                    .HasColumnName("address");

                entity.Property(e => e.CoordinatorEmail)
                    .HasMaxLength(100)
                    .HasColumnName("coordinator_email");

                entity.Property(e => e.CoordinatorName)
                    .HasMaxLength(100)
                    .HasColumnName("coordinator_name");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("createdDate");

                entity.Property(e => e.Description)
                    .HasMaxLength(2000)
                    .HasColumnName("description");

                entity.Property(e => e.ModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("modifiedDate");

                entity.Property(e => e.Name)
                    .HasMaxLength(500)
                    .HasColumnName("name");

                entity.Property(e => e.Phone)
                    .HasMaxLength(10)
                    .HasColumnName("phone")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Hospitalpolicy>(entity =>
            {
                entity.HasKey(e => e.PolicyIdentificationId)
                    .HasName("PRIMARY");

                entity.ToTable("hospitalpolicy");

                entity.HasIndex(e => e.PolicyMakerId, "PolicyMaker_policyMakerId");

                entity.Property(e => e.PolicyIdentificationId)
                    .HasColumnType("int(11)")
                    .HasColumnName("policyIdentificationId");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("createdDate");

                entity.Property(e => e.Description)
                    .HasMaxLength(5000)
                    .HasColumnName("description");

                entity.Property(e => e.DocumentPath)
                    .HasMaxLength(1000)
                    .HasColumnName("documentPath");

                entity.Property(e => e.ModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("modifiedDate");

                entity.Property(e => e.Name)
                    .HasMaxLength(500)
                    .HasColumnName("name");

                entity.Property(e => e.PolicyId)
                    .HasMaxLength(1000)
                    .HasColumnName("policyId");

                entity.Property(e => e.PolicyMakerId)
                    .HasColumnType("int(11)")
                    .HasColumnName("policyMakerId");

                entity.Property(e => e.Type)
                    .HasMaxLength(300)
                    .HasColumnName("type");

                entity.Property(e => e.ValidFrom)
                    .HasColumnType("datetime")
                    .HasColumnName("validFrom");

                entity.Property(e => e.ValidTo)
                    .HasColumnType("datetime")
                    .HasColumnName("validTo");

                entity.Property(e => e.Version)
                    .HasMaxLength(50)
                    .HasColumnName("version");

                entity.HasOne(d => d.PolicyMaker)
                    .WithMany(p => p.Hospitalpolicy)
                    .HasForeignKey(d => d.PolicyMakerId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("PolicyMaker_policyMakerId");
            });

            modelBuilder.Entity<Policymaker>(entity =>
            {
                entity.ToTable("policymaker");

                entity.Property(e => e.PolicyMakerId)
                    .HasColumnType("int(11)")
                    .HasColumnName("policyMakerId");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("email");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("firstName");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("lastName");

                entity.Property(e => e.Phone)
                    .HasMaxLength(10)
                    .HasColumnName("phone")
                    .IsFixedLength();

                entity.Property(e => e.Username)
                    .HasMaxLength(500)
                    .HasColumnName("username");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}